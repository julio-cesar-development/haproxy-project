version: '3.4'

services:
  haproxy:
    container_name: haproxy
    image: haproxy:2.0
    ports:
      - 8000:80
    working_dir: /var/lib/haproxy
    volumes:
      - haproxy-chroot-volume:/var/lib/haproxy
      - haproxy-log-volume:/var/lib/haproxy/dev/log
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      subnet_0:
        ipv4_address: 172.100.0.2
        aliases:
          - haproxy
    hostname: haproxy
    restart: on-failure

  nginx_v1:
    container_name: nginx_v1
    image: nginx:1.19-alpine
    expose:
      - 80
    volumes:
      - ./index1.html:/usr/share/nginx/html/index.html
    networks:
      subnet_0:
        ipv4_address: 172.100.0.3
        aliases:
          - nginx.v1
    hostname: nginx_v1
    restart: on-failure

  nginx_v2:
    container_name: nginx_v2
    image: nginx:1.19-alpine
    expose:
      - 80
    volumes:
      - ./index2.html:/usr/share/nginx/html/index.html
    networks:
      subnet_0:
        ipv4_address: 172.100.0.4
        aliases:
          - nginx.v2
    hostname: nginx_v2
    restart: on-failure

networks:
  subnet_0:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
      - subnet: 172.100.0.0/24

volumes:
  haproxy-chroot-volume: {}
  haproxy-log-volume: {}